import { document } from '@qutejs/window';
import Qute from '@qutejs/runtime';
import css from './ellipsis.css';

Qute.css(css);

/*
<x-tag name='loader-ellipsis' static>
<div class="spinner">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
</div>
</x-tag>
*/

function updateStyle(div, color, size) {
	var style = div.style;
	if (color) style.backgroundColor = color;
	if (size) {
		style.width = size;
		style.height = size;
	}
}

export default Qute('spinner', function(r, xattrs) {
	var el = document.createElement('DIV');

	var color, size, classes = 'spinner';
	if (xattrs) {
		color = xattrs.color;
		size = xattrs.size;
		if (xattrs.style) {
			el.setAttribute('style', xattrs.style);
		}
		if (xattrs.inline) {
			el.style.display = 'inline-block';
		}
		if (xattrs.class) {
			classes = xattrs.class+' '+classes;
		}
		if (xattrs.$show) {
			r.up(Qute.Rendering.SetDisplay(el, r.model, xattrs.$show))();
		}
	}
	el.setAttribute('class', classes);

	var div = document.createElement('DIV');
	updateStyle(div, color, size);
	div.className = 'bounce1';
	el.appendChild(div);

	div = document.createElement('DIV');
	updateStyle(div, color, size);
	div.className = 'bounce2';
	el.appendChild(div);

	div = document.createElement('DIV');
    updateStyle(div, color, size);
	div.className = 'bounce3';
	el.appendChild(div);

	return el;
})
