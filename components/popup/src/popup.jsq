import {document} from '@qutejs/window';
import Qute from '@qutejs/runtime';
import Popup from './popup.js';
import css from './popup.css';

Qute.css(css);

/*
Attributes:

- animation: optional: is set can be one of fade or slidde
- position is a string in the form of "position algin" where
	position is one of: top, bottom, left, right
	and align is one of: start, end, center, fill, top, bottom, left, right

	left and right align are only valid for vertical positions.
	top and bottom align are ony valid for horizontal positions

- auto-close: boolean - toggle close on click. Defaults to true

The defaults are: animation: null, position: "bottom start", auto-close: true
*/
const QutePopup = Qute('popup', {
	init() {
		return {
			position: 'bottom start',
			animation: null,
			autoClose: true
		}
	},
	render: function() {
		return document.createComment('[popup]');
	},
	created: function() {
		var slots = this.$slots;
		if (!slots || !slots.default) throw new Error('<popup> requires a content!');
		this.popup = new Popup(slots.default).effect(this.animation).position(this.position).closeOnClick(this.autoClose);
		var self = this;
		this.popup.onOpen = function() {
			self.emit("open", self.popup.el);
		}
		this.popup.onClose = function() {
			self.emit("close", self.popup.el);
		}
	},
	open: function(target) {
		this.popup.open(target);
	},
	close: function() {
		this.popup.close();
	}
}).channel(function(msg, data) {
	if (msg === 'open') {
		this.open(data);
	} else if (msg === 'close') {
		this.close();
	}
}).watch('position', function(value) {
	this.popup.position(value);
	return false;
}).watch('animation', function(value) {
	this.popup.effect(value);
	return false;
}).watch('autoClose', function(value) {
	this.popup.closeOnClick(!!value);
	return false;
});

Qute.Popup = QutePopup;

export default QutePopup;
