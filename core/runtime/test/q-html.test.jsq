import assert from 'assert';
import {snapshot} from '@qutejs/test-utils';
import window, {document} from '@qutejs/window';
import Qute from '@qutejs/runtime';
import { mountTest, runAfter } from './utils.js';

const { Template, ViewModel, Property } = Qute;

<q:template name='TestHtmlTemplate'>
	<div q:html='content'/>
</q:template>

<q:template name='TestStaticHtmlTemplate'>
	<div q:html>
		Some <b>static</b> HTML
	</div>
</q:template>

<q:template name='TestStaticMarkdownTemplate'>
	<div q:markdown>
		# Header

		Some markdown
	</div>
</q:template>


@Template(TestHtmlTemplate)
class TestHtml extends ViewModel {
    @Property content = "<div id='theDiv'>Some <b>HTML</b> content</div>";
}
var TestStaticHtml = Qute(TestStaticHtmlTemplate);
var TestStaticMarkdown = Qute(TestStaticMarkdownTemplate);


describe('q:html attribute', function() {
	var test = mountTest(TestHtml);

	it('should render variable HTML content', function() {
		var theDiv = test.querySelector('#theDiv');
		assert.equal(theDiv.innerHTML, 'Some <b>HTML</b> content');
		var theB = theDiv.querySelector('b');
		assert.equal(theB.innerHTML, 'HTML');
	});

	it('should render nothing on falsy', function(done) {
		test.firstChild.__qute__.content = null;
		runAfter(function() {
			assert.ok(!test.firstChild.textContent);
            done();
		});
	});

	var testStatic = mountTest(TestStaticHtml);
	it('should render static HTML content', function() {
		assert.equal(testStatic.firstChild.innerHTML.trim(), "Some <b>static</b> HTML");
		assert.equal(testStatic.firstChild.querySelector("b").innerHTML, "static");
	});

});

describe('q:markdown attribute', function() {
	Qute.Rendering.markdown = function(content) {
		// we don't use a real converter for testing
		assert.ok(content.trim().startsWith('# Header'));
		return "<h1>Header</h1><p>Some markdown</p>";
	}

	var test = mountTest(TestStaticMarkdown);

	it('should render static markdown content', function() {
		assert.equal(test.firstChild.innerHTML.trim(), "<h1>Header</h1><p>Some markdown</p>");
		assert.equal(test.firstChild.querySelector("h1").innerHTML, "Header");
	});
});
